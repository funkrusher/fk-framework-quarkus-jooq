/*
 * This file is generated by jOOQ.
 */
package org.fk.core.test.database.coretestdatabase;


import java.util.Arrays;
import java.util.List;

import org.fk.core.test.database.DefaultCatalog;
import org.fk.core.test.database.coretestdatabase.tables.Basic1;
import org.fk.core.test.database.coretestdatabase.tables.Basic2;
import org.fk.core.test.database.coretestdatabase.tables.Databasechangelog;
import org.fk.core.test.database.coretestdatabase.tables.Databasechangeloglock;
import org.fk.core.test.database.coretestdatabase.tables.Nested1;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Coretestdatabase extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>coreTestDatabase</code>
     */
    public static final Coretestdatabase CORETESTDATABASE = new Coretestdatabase();

    /**
     * The table <code>coreTestDatabase.Basic1</code>.
     */
    public final Basic1 BASIC1 = Basic1.BASIC1;

    /**
     * The table <code>coreTestDatabase.Basic2</code>.
     */
    public final Basic2 BASIC2 = Basic2.BASIC2;

    /**
     * The table <code>coreTestDatabase.DATABASECHANGELOG</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>coreTestDatabase.DATABASECHANGELOGLOCK</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>coreTestDatabase.Nested1</code>.
     */
    public final Nested1 NESTED1 = Nested1.NESTED1;

    /**
     * No further instances allowed
     */
    private Coretestdatabase() {
        super("coreTestDatabase", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Basic1.BASIC1,
            Basic2.BASIC2,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Nested1.NESTED1
        );
    }
}
