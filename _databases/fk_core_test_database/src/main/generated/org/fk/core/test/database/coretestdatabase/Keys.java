/*
 * This file is generated by jOOQ.
 */
package org.fk.core.test.database.coretestdatabase;


import org.fk.core.test.database.coretestdatabase.tables.Basic1;
import org.fk.core.test.database.coretestdatabase.tables.Basic2;
import org.fk.core.test.database.coretestdatabase.tables.Databasechangeloglock;
import org.fk.core.test.database.coretestdatabase.tables.Nested1;
import org.fk.core.test.database.coretestdatabase.tables.records.Basic1Record;
import org.fk.core.test.database.coretestdatabase.tables.records.Basic2Record;
import org.fk.core.test.database.coretestdatabase.tables.records.DatabasechangeloglockRecord;
import org.fk.core.test.database.coretestdatabase.tables.records.Nested1Record;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * coreTestDatabase.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Basic1Record> KEY_BASIC1_PRIMARY = Internal.createUniqueKey(Basic1.BASIC1, DSL.name("KEY_Basic1_PRIMARY"), new TableField[] { Basic1.BASIC1.AUTOINCID }, true);
    public static final UniqueKey<Basic2Record> KEY_BASIC2_PRIMARY = Internal.createUniqueKey(Basic2.BASIC2, DSL.name("KEY_Basic2_PRIMARY"), new TableField[] { Basic2.BASIC2.UUIDID }, true);
    public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("KEY_DATABASECHANGELOGLOCK_PRIMARY"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<Nested1Record> KEY_NESTED1_PRIMARY = Internal.createUniqueKey(Nested1.NESTED1, DSL.name("KEY_Nested1_PRIMARY"), new TableField[] { Nested1.NESTED1.AUTOINCID, Nested1.NESTED1.UUIDID }, true);
}
