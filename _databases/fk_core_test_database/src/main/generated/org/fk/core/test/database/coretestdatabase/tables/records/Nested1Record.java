/*
 * This file is generated by jOOQ.
 */
package org.fk.core.test.database.coretestdatabase.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.UUID;

import org.fk.core.test.database.coretestdatabase.tables.Nested1;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Nested1Record extends UpdatableRecordImpl<Nested1Record> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>coreTestDatabase.Nested1.autoIncId</code>.
     */
    public Nested1Record setAutoincid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.autoIncId</code>.
     */
    @NotNull
    public Integer getAutoincid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.uuidId</code>.
     */
    public Nested1Record setUuidid(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.uuidId</code>.
     */
    @NotNull
    public UUID getUuidid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.string1</code>.
     */
    public Nested1Record setString1(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.string1</code>.
     */
    @Size(max = 50)
    public String getString1() {
        return (String) get(2);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.string2</code>.
     */
    public Nested1Record setString2(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.string2</code>.
     */
    @Size(max = 50)
    public String getString2() {
        return (String) get(3);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.integer1</code>.
     */
    public Nested1Record setInteger1(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.integer1</code>.
     */
    public Integer getInteger1() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.long1</code>.
     */
    public Nested1Record setLong1(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.long1</code>.
     */
    public Long getLong1() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.decimal1</code>.
     */
    public Nested1Record setDecimal1(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.decimal1</code>.
     */
    public BigDecimal getDecimal1() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>coreTestDatabase.Nested1.dateTime1</code>.
     */
    public Nested1Record setDatetime1(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.Nested1.dateTime1</code>.
     */
    public LocalDateTime getDatetime1() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Nested1Record
     */
    public Nested1Record() {
        super(Nested1.NESTED1);
    }

    /**
     * Create a detached, initialised Nested1Record
     */
    public Nested1Record(Integer autoincid, UUID uuidid, String string1, String string2, Integer integer1, Long long1, BigDecimal decimal1, LocalDateTime datetime1) {
        super(Nested1.NESTED1);

        setAutoincid(autoincid);
        setUuidid(uuidid);
        setString1(string1);
        setString2(string2);
        setInteger1(integer1);
        setLong1(long1);
        setDecimal1(decimal1);
        setDatetime1(datetime1);
        resetChangedOnNotNull();
    }
}
