/*
 * This file is generated by jOOQ.
 */
package org.fk.coreTestDatabase.coretestdatabase.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.fk.coreTestDatabase.coretestdatabase.tables.interfaces.IProduct;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Product implements IProduct {

    private static final long serialVersionUID = 1L;

    private Long productId;
    private Integer clientId;
    private BigDecimal price;
    private String typeId;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Boolean deleted;

    public Product() {}

    public Product(IProduct value) {
        this.productId = value.getProductId();
        this.clientId = value.getClientId();
        this.price = value.getPrice();
        this.typeId = value.getTypeId();
        this.createdAt = value.getCreatedAt();
        this.updatedAt = value.getUpdatedAt();
        this.deleted = value.getDeleted();
    }

    public Product(
        Long productId,
        Integer clientId,
        BigDecimal price,
        String typeId,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        Boolean deleted
    ) {
        this.productId = productId;
        this.clientId = clientId;
        this.price = price;
        this.typeId = typeId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deleted = deleted;
    }

    /**
     * Getter for <code>coreTestDatabase.product.productId</code>.
     */
    @Override
    public Long getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>coreTestDatabase.product.productId</code>.
     */
    @Override
    public Product setProductId(Long productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.clientId</code>.
     */
    @NotNull
    @Override
    public Integer getClientId() {
        return this.clientId;
    }

    /**
     * Setter for <code>coreTestDatabase.product.clientId</code>.
     */
    @Override
    public Product setClientId(Integer clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.price</code>.
     */
    @NotNull
    @Override
    public BigDecimal getPrice() {
        return this.price;
    }

    /**
     * Setter for <code>coreTestDatabase.product.price</code>.
     */
    @Override
    public Product setPrice(BigDecimal price) {
        this.price = price;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.typeId</code>.
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String getTypeId() {
        return this.typeId;
    }

    /**
     * Setter for <code>coreTestDatabase.product.typeId</code>.
     */
    @Override
    public Product setTypeId(String typeId) {
        this.typeId = typeId;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.createdAt</code>.
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>coreTestDatabase.product.createdAt</code>.
     */
    @Override
    public Product setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.updatedAt</code>.
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>coreTestDatabase.product.updatedAt</code>.
     */
    @Override
    public Product setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>coreTestDatabase.product.deleted</code>.
     */
    @Override
    public Boolean getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>coreTestDatabase.product.deleted</code>.
     */
    @Override
    public Product setDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Product (");

        sb.append(productId);
        sb.append(", ").append(clientId);
        sb.append(", ").append(price);
        sb.append(", ").append(typeId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(deleted);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IProduct from) {
        setProductId(from.getProductId());
        setClientId(from.getClientId());
        setPrice(from.getPrice());
        setTypeId(from.getTypeId());
        setCreatedAt(from.getCreatedAt());
        setUpdatedAt(from.getUpdatedAt());
        setDeleted(from.getDeleted());
    }

    @Override
    public <E extends IProduct> E into(E into) {
        into.from(this);
        return into;
    }
}
