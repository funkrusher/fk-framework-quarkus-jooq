/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.pojos;
import org.fk.core.dto.DTO;
import org.fk.core.dto.BookKeeper;
import org.eclipse.microprofile.openapi.annotations.media.Schema;
import org.eclipse.microprofile.openapi.annotations.enums.SchemaType;
import jakarta.xml.bind.annotation.XmlTransient;
import com.fasterxml.jackson.annotation.JsonIgnore;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.interfaces.IQrtzPausedTriggerGrps;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzPausedTriggerGrpsDto implements IQrtzPausedTriggerGrps, DTO {

    private static final long serialVersionUID = 1L;

    private String SCHED_NAME;
    private String TRIGGER_GROUP;

    public QrtzPausedTriggerGrpsDto() { this.keeper = new BookKeeper(this); }


    /**
     * Getter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String getSCHED_NAME() {
        return this.SCHED_NAME;
    }

    /**
     * Setter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME</code>.
     */
    @Override
    public QrtzPausedTriggerGrpsDto setSCHED_NAME(String SCHED_NAME) {
        this.SCHED_NAME = SCHED_NAME;
        this.keeper.touch("SCHED_NAME");
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String getTRIGGER_GROUP() {
        return this.TRIGGER_GROUP;
    }

    /**
     * Setter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP</code>.
     */
    @Override
    public QrtzPausedTriggerGrpsDto setTRIGGER_GROUP(String TRIGGER_GROUP) {
        this.TRIGGER_GROUP = TRIGGER_GROUP;
        this.keeper.touch("TRIGGER_GROUP");
        return this;
    }

    @Override
    public String toString() {
        return keeper.touchedToString();
    }
    
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DTO other = (DTO) obj;
        return this.keeper.touchedEquals(other);
    }
    @Override
    public int hashCode() {
        return this.keeper.touchedHashCode();
    }


    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IQrtzPausedTriggerGrps from) {
        setSCHED_NAME(from.getSCHED_NAME());
        setTRIGGER_GROUP(from.getTRIGGER_GROUP());
    }

    @Override
    public <E extends IQrtzPausedTriggerGrps> E into(E into) {
        into.from(this);
        return into;
    }
    // -------------------------------------------------------------------------
    // BookKeeper (Patching Updates Support)
    // -------------------------------------------------------------------------
    
    @JsonIgnore
    @XmlTransient
    protected BookKeeper keeper;
    
    @JsonIgnore
    @XmlTransient
    @Override
    public BookKeeper getBookKeeper() {
        return keeper;
    }
}
