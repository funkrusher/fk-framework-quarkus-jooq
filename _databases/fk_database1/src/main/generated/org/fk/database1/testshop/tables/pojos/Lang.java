/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.interfaces.ILang;


/**
 * Lang contains available languages of the app
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Lang implements ILang {

    private static final long serialVersionUID = 1L;

    private Integer langId;
    private String code;
    private String description;

    public Lang() {}

    public Lang(ILang value) {
        this.langId = value.LangId();
        this.code = value.Code();
        this.description = value.Description();
    }

    public Lang(
        Integer langId,
        String code,
        String description
    ) {
        this.langId = langId;
        this.code = code;
        this.description = description;
    }

    /**
     * Getter for <code>testshop.lang.langId</code>. langId
     */
    @Override
    public Integer LangId() {
        return this.langId;
    }

    /**
     * Setter for <code>testshop.lang.langId</code>. langId
     */
    @Override
    public Lang LangId(Integer langId) {
        this.langId = langId;
        return this;
    }

    /**
     * Getter for <code>testshop.lang.code</code>. ISO-639 language code
     */
    @NotNull
    @Size(max = 2)
    @Override
    public String Code() {
        return this.code;
    }

    /**
     * Setter for <code>testshop.lang.code</code>. ISO-639 language code
     */
    @Override
    public Lang Code(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>testshop.lang.description</code>. internal description
     * of language
     */
    @Size(max = 50)
    @Override
    public String Description() {
        return this.description;
    }

    /**
     * Setter for <code>testshop.lang.description</code>. internal description
     * of language
     */
    @Override
    public Lang Description(String description) {
        this.description = description;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Lang (");

        sb.append(langId);
        sb.append(", ").append(code);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILang from) {
        LangId(from.LangId());
        Code(from.Code());
        Description(from.Description());
    }

    @Override
    public <E extends ILang> E into(E into) {
        into.from(this);
        return into;
    }
}
