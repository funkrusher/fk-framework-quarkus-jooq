/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.interfaces.IQrtzCronTriggers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzCronTriggers implements IQrtzCronTriggers {

    private static final long serialVersionUID = 1L;

    private String SCHED_NAME;
    private String TRIGGER_NAME;
    private String TRIGGER_GROUP;
    private String CRON_EXPRESSION;
    private String TIME_ZONE_ID;

    public QrtzCronTriggers() {}

    public QrtzCronTriggers(IQrtzCronTriggers value) {
        this.SCHED_NAME = value.SCHED_NAME();
        this.TRIGGER_NAME = value.TRIGGER_NAME();
        this.TRIGGER_GROUP = value.TRIGGER_GROUP();
        this.CRON_EXPRESSION = value.CRON_EXPRESSION();
        this.TIME_ZONE_ID = value.TIME_ZONE_ID();
    }

    public QrtzCronTriggers(
        String SCHED_NAME,
        String TRIGGER_NAME,
        String TRIGGER_GROUP,
        String CRON_EXPRESSION,
        String TIME_ZONE_ID
    ) {
        this.SCHED_NAME = SCHED_NAME;
        this.TRIGGER_NAME = TRIGGER_NAME;
        this.TRIGGER_GROUP = TRIGGER_GROUP;
        this.CRON_EXPRESSION = CRON_EXPRESSION;
        this.TIME_ZONE_ID = TIME_ZONE_ID;
    }

    /**
     * Getter for <code>testshop.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String SCHED_NAME() {
        return this.SCHED_NAME;
    }

    /**
     * Setter for <code>testshop.QRTZ_CRON_TRIGGERS.SCHED_NAME</code>.
     */
    @Override
    public QrtzCronTriggers SCHED_NAME(String SCHED_NAME) {
        this.SCHED_NAME = SCHED_NAME;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String TRIGGER_NAME() {
        return this.TRIGGER_NAME;
    }

    /**
     * Setter for <code>testshop.QRTZ_CRON_TRIGGERS.TRIGGER_NAME</code>.
     */
    @Override
    public QrtzCronTriggers TRIGGER_NAME(String TRIGGER_NAME) {
        this.TRIGGER_NAME = TRIGGER_NAME;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String TRIGGER_GROUP() {
        return this.TRIGGER_GROUP;
    }

    /**
     * Setter for <code>testshop.QRTZ_CRON_TRIGGERS.TRIGGER_GROUP</code>.
     */
    @Override
    public QrtzCronTriggers TRIGGER_GROUP(String TRIGGER_GROUP) {
        this.TRIGGER_GROUP = TRIGGER_GROUP;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String CRON_EXPRESSION() {
        return this.CRON_EXPRESSION;
    }

    /**
     * Setter for <code>testshop.QRTZ_CRON_TRIGGERS.CRON_EXPRESSION</code>.
     */
    @Override
    public QrtzCronTriggers CRON_EXPRESSION(String CRON_EXPRESSION) {
        this.CRON_EXPRESSION = CRON_EXPRESSION;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
     */
    @Size(max = 80)
    @Override
    public String TIME_ZONE_ID() {
        return this.TIME_ZONE_ID;
    }

    /**
     * Setter for <code>testshop.QRTZ_CRON_TRIGGERS.TIME_ZONE_ID</code>.
     */
    @Override
    public QrtzCronTriggers TIME_ZONE_ID(String TIME_ZONE_ID) {
        this.TIME_ZONE_ID = TIME_ZONE_ID;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("QrtzCronTriggers (");

        sb.append(SCHED_NAME);
        sb.append(", ").append(TRIGGER_NAME);
        sb.append(", ").append(TRIGGER_GROUP);
        sb.append(", ").append(CRON_EXPRESSION);
        sb.append(", ").append(TIME_ZONE_ID);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IQrtzCronTriggers from) {
        SCHED_NAME(from.SCHED_NAME());
        TRIGGER_NAME(from.TRIGGER_NAME());
        TRIGGER_GROUP(from.TRIGGER_GROUP());
        CRON_EXPRESSION(from.CRON_EXPRESSION());
        TIME_ZONE_ID(from.TIME_ZONE_ID());
    }

    @Override
    public <E extends IQrtzCronTriggers> E into(E into) {
        into.from(this);
        return into;
    }
}
