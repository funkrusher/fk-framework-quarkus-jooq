/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.interfaces.IQrtzSimpleTriggers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzSimpleTriggers implements IQrtzSimpleTriggers {

    private static final long serialVersionUID = 1L;

    private String SCHED_NAME;
    private String TRIGGER_NAME;
    private String TRIGGER_GROUP;
    private Long REPEAT_COUNT;
    private Long REPEAT_INTERVAL;
    private Long TIMES_TRIGGERED;

    public QrtzSimpleTriggers() {}

    public QrtzSimpleTriggers(IQrtzSimpleTriggers value) {
        this.SCHED_NAME = value.SCHED_NAME();
        this.TRIGGER_NAME = value.TRIGGER_NAME();
        this.TRIGGER_GROUP = value.TRIGGER_GROUP();
        this.REPEAT_COUNT = value.REPEAT_COUNT();
        this.REPEAT_INTERVAL = value.REPEAT_INTERVAL();
        this.TIMES_TRIGGERED = value.TIMES_TRIGGERED();
    }

    public QrtzSimpleTriggers(
        String SCHED_NAME,
        String TRIGGER_NAME,
        String TRIGGER_GROUP,
        Long REPEAT_COUNT,
        Long REPEAT_INTERVAL,
        Long TIMES_TRIGGERED
    ) {
        this.SCHED_NAME = SCHED_NAME;
        this.TRIGGER_NAME = TRIGGER_NAME;
        this.TRIGGER_GROUP = TRIGGER_GROUP;
        this.REPEAT_COUNT = REPEAT_COUNT;
        this.REPEAT_INTERVAL = REPEAT_INTERVAL;
        this.TIMES_TRIGGERED = TIMES_TRIGGERED;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String SCHED_NAME() {
        return this.SCHED_NAME;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.SCHED_NAME</code>.
     */
    @Override
    public QrtzSimpleTriggers SCHED_NAME(String SCHED_NAME) {
        this.SCHED_NAME = SCHED_NAME;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String TRIGGER_NAME() {
        return this.TRIGGER_NAME;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TRIGGER_NAME</code>.
     */
    @Override
    public QrtzSimpleTriggers TRIGGER_NAME(String TRIGGER_NAME) {
        this.TRIGGER_NAME = TRIGGER_NAME;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String TRIGGER_GROUP() {
        return this.TRIGGER_GROUP;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TRIGGER_GROUP</code>.
     */
    @Override
    public QrtzSimpleTriggers TRIGGER_GROUP(String TRIGGER_GROUP) {
        this.TRIGGER_GROUP = TRIGGER_GROUP;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.REPEAT_COUNT</code>.
     */
    @NotNull
    @Override
    public Long REPEAT_COUNT() {
        return this.REPEAT_COUNT;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.REPEAT_COUNT</code>.
     */
    @Override
    public QrtzSimpleTriggers REPEAT_COUNT(Long REPEAT_COUNT) {
        this.REPEAT_COUNT = REPEAT_COUNT;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.REPEAT_INTERVAL</code>.
     */
    @NotNull
    @Override
    public Long REPEAT_INTERVAL() {
        return this.REPEAT_INTERVAL;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.REPEAT_INTERVAL</code>.
     */
    @Override
    public QrtzSimpleTriggers REPEAT_INTERVAL(Long REPEAT_INTERVAL) {
        this.REPEAT_INTERVAL = REPEAT_INTERVAL;
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TIMES_TRIGGERED</code>.
     */
    @NotNull
    @Override
    public Long TIMES_TRIGGERED() {
        return this.TIMES_TRIGGERED;
    }

    /**
     * Setter for <code>testshop.QRTZ_SIMPLE_TRIGGERS.TIMES_TRIGGERED</code>.
     */
    @Override
    public QrtzSimpleTriggers TIMES_TRIGGERED(Long TIMES_TRIGGERED) {
        this.TIMES_TRIGGERED = TIMES_TRIGGERED;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("QrtzSimpleTriggers (");

        sb.append(SCHED_NAME);
        sb.append(", ").append(TRIGGER_NAME);
        sb.append(", ").append(TRIGGER_GROUP);
        sb.append(", ").append(REPEAT_COUNT);
        sb.append(", ").append(REPEAT_INTERVAL);
        sb.append(", ").append(TIMES_TRIGGERED);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IQrtzSimpleTriggers from) {
        SCHED_NAME(from.SCHED_NAME());
        TRIGGER_NAME(from.TRIGGER_NAME());
        TRIGGER_GROUP(from.TRIGGER_GROUP());
        REPEAT_COUNT(from.REPEAT_COUNT());
        REPEAT_INTERVAL(from.REPEAT_INTERVAL());
        TIMES_TRIGGERED(from.TIMES_TRIGGERED());
    }

    @Override
    public <E extends IQrtzSimpleTriggers> E into(E into) {
        into.from(this);
        return into;
    }
}
