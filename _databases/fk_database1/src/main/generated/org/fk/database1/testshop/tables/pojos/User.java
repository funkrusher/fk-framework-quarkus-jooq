/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.interfaces.IUser;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class User implements IUser {

    private static final long serialVersionUID = 1L;

    private Integer userId;
    private Integer clientId;
    private String email;
    private String firstname;
    private String lastname;

    public User() {}

    public User(IUser value) {
        this.userId = value.UserId();
        this.clientId = value.ClientId();
        this.email = value.Email();
        this.firstname = value.Firstname();
        this.lastname = value.Lastname();
    }

    public User(
        Integer userId,
        Integer clientId,
        String email,
        String firstname,
        String lastname
    ) {
        this.userId = userId;
        this.clientId = clientId;
        this.email = email;
        this.firstname = firstname;
        this.lastname = lastname;
    }

    /**
     * Getter for <code>testshop.user.userId</code>.
     */
    @Override
    public Integer UserId() {
        return this.userId;
    }

    /**
     * Setter for <code>testshop.user.userId</code>.
     */
    @Override
    public User UserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>testshop.user.clientId</code>.
     */
    @NotNull
    @Override
    public Integer ClientId() {
        return this.clientId;
    }

    /**
     * Setter for <code>testshop.user.clientId</code>.
     */
    @Override
    public User ClientId(Integer clientId) {
        this.clientId = clientId;
        return this;
    }

    /**
     * Getter for <code>testshop.user.email</code>.
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String Email() {
        return this.email;
    }

    /**
     * Setter for <code>testshop.user.email</code>.
     */
    @Override
    public User Email(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>testshop.user.firstname</code>.
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String Firstname() {
        return this.firstname;
    }

    /**
     * Setter for <code>testshop.user.firstname</code>.
     */
    @Override
    public User Firstname(String firstname) {
        this.firstname = firstname;
        return this;
    }

    /**
     * Getter for <code>testshop.user.lastname</code>.
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String Lastname() {
        return this.lastname;
    }

    /**
     * Setter for <code>testshop.user.lastname</code>.
     */
    @Override
    public User Lastname(String lastname) {
        this.lastname = lastname;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(userId);
        sb.append(", ").append(clientId);
        sb.append(", ").append(email);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        UserId(from.UserId());
        ClientId(from.ClientId());
        Email(from.Email());
        Firstname(from.Firstname());
        Lastname(from.Lastname());
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }
}
