/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.Lang;
import org.fk.database1.testshop.tables.interfaces.ILang;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Lang contains available languages of the app
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LangRecord extends UpdatableRecordImpl<LangRecord> implements ILang {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.lang.langId</code>. langId
     */
    @Override
    public LangRecord LangId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.lang.langId</code>. langId
     */
    @Override
    public Integer LangId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>testshop.lang.code</code>. ISO-639 language code
     */
    @Override
    public LangRecord Code(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.lang.code</code>. ISO-639 language code
     */
    @NotNull
    @Size(max = 2)
    @Override
    public String Code() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testshop.lang.description</code>. internal description
     * of language
     */
    @Override
    public LangRecord Description(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>testshop.lang.description</code>. internal description
     * of language
     */
    @Size(max = 50)
    @Override
    public String Description() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILang from) {
        LangId(from.LangId());
        Code(from.Code());
        Description(from.Description());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ILang> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LangRecord
     */
    public LangRecord() {
        super(Lang.LANG);
    }

    /**
     * Create a detached, initialised LangRecord
     */
    public LangRecord(Integer langId, String code, String description) {
        super(Lang.LANG);

        LangId(langId);
        Code(code);
        Description(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LangRecord
     */
    public LangRecord(org.fk.database1.testshop.tables.pojos.Lang value) {
        super(Lang.LANG);

        if (value != null) {
            LangId(value.LangId());
            Code(value.Code());
            Description(value.Description());
            resetChangedOnNotNull();
        }
    }
}
