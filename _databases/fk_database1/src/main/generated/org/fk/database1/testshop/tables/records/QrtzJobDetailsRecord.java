/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.QrtzJobDetails;
import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzJobDetailsRecord extends UpdatableRecordImpl<QrtzJobDetailsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
     */
    public QrtzJobDetailsRecord setSchedName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    public String getSchedName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_NAME</code>.
     */
    public QrtzJobDetailsRecord setJobName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_NAME</code>.
     */
    @NotNull
    @Size(max = 190)
    public String getJobName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
     */
    public QrtzJobDetailsRecord setJobGroup(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    public String getJobGroup() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
     */
    public QrtzJobDetailsRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
     */
    @Size(max = 250)
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
     */
    public QrtzJobDetailsRecord setJobClassName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
     */
    @NotNull
    @Size(max = 250)
    public String getJobClassName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
     */
    public QrtzJobDetailsRecord setIsDurable(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
     */
    @NotNull
    @Size(max = 1)
    public String getIsDurable() {
        return (String) get(5);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
     */
    public QrtzJobDetailsRecord setIsNonconcurrent(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
     */
    @NotNull
    @Size(max = 1)
    public String getIsNonconcurrent() {
        return (String) get(6);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
     */
    public QrtzJobDetailsRecord setIsUpdateData(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
     */
    @NotNull
    @Size(max = 1)
    public String getIsUpdateData() {
        return (String) get(7);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
     */
    public QrtzJobDetailsRecord setRequestsRecovery(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
     */
    @NotNull
    @Size(max = 1)
    public String getRequestsRecovery() {
        return (String) get(8);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_DATA</code>.
     */
    public QrtzJobDetailsRecord setJobData(byte[] value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_DATA</code>.
     */
    @Size(max = 65535)
    public byte[] getJobData() {
        return (byte[]) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QrtzJobDetailsRecord
     */
    public QrtzJobDetailsRecord() {
        super(QrtzJobDetails.QRTZ_JOB_DETAILS);
    }

    /**
     * Create a detached, initialised QrtzJobDetailsRecord
     */
    public QrtzJobDetailsRecord(String schedName, String jobName, String jobGroup, String description, String jobClassName, String isDurable, String isNonconcurrent, String isUpdateData, String requestsRecovery, byte[] jobData) {
        super(QrtzJobDetails.QRTZ_JOB_DETAILS);

        setSchedName(schedName);
        setJobName(jobName);
        setJobGroup(jobGroup);
        setDescription(description);
        setJobClassName(jobClassName);
        setIsDurable(isDurable);
        setIsNonconcurrent(isNonconcurrent);
        setIsUpdateData(isUpdateData);
        setRequestsRecovery(requestsRecovery);
        setJobData(jobData);
        resetChangedOnNotNull();
    }
}
