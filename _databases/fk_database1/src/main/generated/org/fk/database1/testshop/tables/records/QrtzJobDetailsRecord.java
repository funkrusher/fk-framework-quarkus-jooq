/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.QrtzJobDetails;
import org.fk.database1.testshop.tables.interfaces.IQrtzJobDetails;
import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzJobDetailsRecord extends UpdatableRecordImpl<QrtzJobDetailsRecord> implements IQrtzJobDetails {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
     */
    @Override
    public QrtzJobDetailsRecord setSCHED_NAME(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String getSCHED_NAME() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_NAME</code>.
     */
    @Override
    public QrtzJobDetailsRecord setJOB_NAME(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_NAME</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String getJOB_NAME() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
     */
    @Override
    public QrtzJobDetailsRecord setJOB_GROUP(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String getJOB_GROUP() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
     */
    @Override
    public QrtzJobDetailsRecord setDESCRIPTION(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.DESCRIPTION</code>.
     */
    @Size(max = 250)
    @Override
    public String getDESCRIPTION() {
        return (String) get(3);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
     */
    @Override
    public QrtzJobDetailsRecord setJOB_CLASS_NAME(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_CLASS_NAME</code>.
     */
    @NotNull
    @Size(max = 250)
    @Override
    public String getJOB_CLASS_NAME() {
        return (String) get(4);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
     */
    @Override
    public QrtzJobDetailsRecord setIS_DURABLE(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_DURABLE</code>.
     */
    @NotNull
    @Size(max = 1)
    @Override
    public String getIS_DURABLE() {
        return (String) get(5);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
     */
    @Override
    public QrtzJobDetailsRecord setIS_NONCONCURRENT(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_NONCONCURRENT</code>.
     */
    @NotNull
    @Size(max = 1)
    @Override
    public String getIS_NONCONCURRENT() {
        return (String) get(6);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
     */
    @Override
    public QrtzJobDetailsRecord setIS_UPDATE_DATA(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.IS_UPDATE_DATA</code>.
     */
    @NotNull
    @Size(max = 1)
    @Override
    public String getIS_UPDATE_DATA() {
        return (String) get(7);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
     */
    @Override
    public QrtzJobDetailsRecord setREQUESTS_RECOVERY(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.REQUESTS_RECOVERY</code>.
     */
    @NotNull
    @Size(max = 1)
    @Override
    public String getREQUESTS_RECOVERY() {
        return (String) get(8);
    }

    /**
     * Setter for <code>testshop.QRTZ_JOB_DETAILS.JOB_DATA</code>.
     */
    @Override
    public QrtzJobDetailsRecord setJOB_DATA(byte[] value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_JOB_DETAILS.JOB_DATA</code>.
     */
    @Size(max = 65535)
    @Override
    public byte[] getJOB_DATA() {
        return (byte[]) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IQrtzJobDetails from) {
        setSCHED_NAME(from.getSCHED_NAME());
        setJOB_NAME(from.getJOB_NAME());
        setJOB_GROUP(from.getJOB_GROUP());
        setDESCRIPTION(from.getDESCRIPTION());
        setJOB_CLASS_NAME(from.getJOB_CLASS_NAME());
        setIS_DURABLE(from.getIS_DURABLE());
        setIS_NONCONCURRENT(from.getIS_NONCONCURRENT());
        setIS_UPDATE_DATA(from.getIS_UPDATE_DATA());
        setREQUESTS_RECOVERY(from.getREQUESTS_RECOVERY());
        setJOB_DATA(from.getJOB_DATA());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IQrtzJobDetails> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QrtzJobDetailsRecord
     */
    public QrtzJobDetailsRecord() {
        super(QrtzJobDetails.QRTZ_JOB_DETAILS);
    }

    /**
     * Create a detached, initialised QrtzJobDetailsRecord
     */
    public QrtzJobDetailsRecord(String SCHED_NAME, String JOB_NAME, String JOB_GROUP, String DESCRIPTION, String JOB_CLASS_NAME, String IS_DURABLE, String IS_NONCONCURRENT, String IS_UPDATE_DATA, String REQUESTS_RECOVERY, byte[] JOB_DATA) {
        super(QrtzJobDetails.QRTZ_JOB_DETAILS);

        setSCHED_NAME(SCHED_NAME);
        setJOB_NAME(JOB_NAME);
        setJOB_GROUP(JOB_GROUP);
        setDESCRIPTION(DESCRIPTION);
        setJOB_CLASS_NAME(JOB_CLASS_NAME);
        setIS_DURABLE(IS_DURABLE);
        setIS_NONCONCURRENT(IS_NONCONCURRENT);
        setIS_UPDATE_DATA(IS_UPDATE_DATA);
        setREQUESTS_RECOVERY(REQUESTS_RECOVERY);
        setJOB_DATA(JOB_DATA);
        resetChangedOnNotNull();
    }
}
