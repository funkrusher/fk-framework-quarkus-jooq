/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database1.testshop.tables.QrtzSchedulerState;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzSchedulerStateRecord extends UpdatableRecordImpl<QrtzSchedulerStateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.QRTZ_SCHEDULER_STATE.SCHED_NAME</code>.
     */
    public QrtzSchedulerStateRecord setSchedName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SCHEDULER_STATE.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    public String getSchedName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testshop.QRTZ_SCHEDULER_STATE.INSTANCE_NAME</code>.
     */
    public QrtzSchedulerStateRecord setInstanceName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SCHEDULER_STATE.INSTANCE_NAME</code>.
     */
    @NotNull
    @Size(max = 190)
    public String getInstanceName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>testshop.QRTZ_SCHEDULER_STATE.LAST_CHECKIN_TIME</code>.
     */
    public QrtzSchedulerStateRecord setLastCheckinTime(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SCHEDULER_STATE.LAST_CHECKIN_TIME</code>.
     */
    @NotNull
    public Long getLastCheckinTime() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>testshop.QRTZ_SCHEDULER_STATE.CHECKIN_INTERVAL</code>.
     */
    public QrtzSchedulerStateRecord setCheckinInterval(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>testshop.QRTZ_SCHEDULER_STATE.CHECKIN_INTERVAL</code>.
     */
    @NotNull
    public Long getCheckinInterval() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QrtzSchedulerStateRecord
     */
    public QrtzSchedulerStateRecord() {
        super(QrtzSchedulerState.QRTZ_SCHEDULER_STATE);
    }

    /**
     * Create a detached, initialised QrtzSchedulerStateRecord
     */
    public QrtzSchedulerStateRecord(String schedName, String instanceName, Long lastCheckinTime, Long checkinInterval) {
        super(QrtzSchedulerState.QRTZ_SCHEDULER_STATE);

        setSchedName(schedName);
        setInstanceName(instanceName);
        setLastCheckinTime(lastCheckinTime);
        setCheckinInterval(checkinInterval);
        resetChangedOnNotNull();
    }
}
