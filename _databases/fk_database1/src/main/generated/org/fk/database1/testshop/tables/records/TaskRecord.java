/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import java.time.LocalDateTime;

import org.fk.database1.testshop.tables.Task;
import org.fk.database1.testshop.tables.interfaces.ITask;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements ITask {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.task.taskId</code>.
     */
    @Override
    public TaskRecord TaskId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.task.taskId</code>.
     */
    @Override
    public Long TaskId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>testshop.task.createdAt</code>.
     */
    @Override
    public TaskRecord CreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.task.createdAt</code>.
     */
    @Override
    public LocalDateTime CreatedAt() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ITask from) {
        TaskId(from.TaskId());
        CreatedAt(from.CreatedAt());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ITask> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long taskId, LocalDateTime createdAt) {
        super(Task.TASK);

        TaskId(taskId);
        CreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(org.fk.database1.testshop.tables.pojos.Task value) {
        super(Task.TASK);

        if (value != null) {
            TaskId(value.TaskId());
            CreatedAt(value.CreatedAt());
            resetChangedOnNotNull();
        }
    }
}
