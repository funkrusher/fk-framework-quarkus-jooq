/*
 * This file is generated by jOOQ.
 */
package org.fk.database1.testshop.tables.records;


import java.time.LocalDateTime;

import org.fk.database1.testshop.tables.Task;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.task.taskId</code>.
     */
    public TaskRecord setTaskid(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>testshop.task.taskId</code>.
     */
    public Long getTaskid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>testshop.task.createdAt</code>.
     */
    public TaskRecord setCreatedat(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>testshop.task.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long taskid, LocalDateTime createdat) {
        super(Task.TASK);

        setTaskid(taskid);
        setCreatedat(createdat);
        resetChangedOnNotNull();
    }
}
