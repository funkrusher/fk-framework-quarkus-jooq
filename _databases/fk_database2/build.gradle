plugins {
    id 'java'
    id 'java-library'
    id 'idea'
}

dependencies {
    // decide if you want to resolve fk_core from reposilite, or directly from gradle-module.
    api project(':_core:fk_core')
    // api libs.fkCore

    api libs.bundles.jooq
    api libs.bundles.testcontainers
    api libs.postgresJavaClient
}

// configure generated/src-directories, necessary for use in intellij-idea.
def mySrcDir = "src/main/java"
def generatedDir = "src/main/generated"
sourceSets {
    main {
        java {
            srcDir generatedDir
            srcDir mySrcDir
        }
    }
}
idea {
    module {
        generatedSourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(generatedDir))
        sourceDirs.addAll(file(mySrcDir))
    }
}

// jooqCodeGenerator task
task generateDatabase2JooqCode(type: JavaExec) {
    group = 'application'
    description = 'Runs JooqCodeGenerator Java Application'
    mainClass = 'org.fk.database2.Database2CodeGenerator'
    classpath = sourceSets.main.runtimeClasspath
}

// publishing
publishing {
    publications {
        maven(MavenPublication) {
            groupId = theGroup
            artifactId = "fk-database2"
            version = theVersion
            from components.java
        }
    }
}
