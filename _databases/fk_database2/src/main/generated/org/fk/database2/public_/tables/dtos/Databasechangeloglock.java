/*
 * This file is generated by jOOQ.
 */
package org.fk.database2.public_.tables.dtos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import org.fk.core.dto.AbstractDTO;
import org.fk.database2.public_.tables.interfaces.IDatabasechangeloglock;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Databasechangeloglock extends AbstractDTO implements IDatabasechangeloglock {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private Boolean locked;
    private LocalDateTime lockgranted;
    private String lockedby;

    public Databasechangeloglock() {}

    public Databasechangeloglock(IDatabasechangeloglock value) {
        this.id = value.getId();
        this.locked = value.getLocked();
        this.lockgranted = value.getLockgranted();
        this.lockedby = value.getLockedby();
    }

    public Databasechangeloglock(
        Integer id,
        Boolean locked,
        LocalDateTime lockgranted,
        String lockedby
    ) {
        this.id = id;
        this.locked = locked;
        this.lockgranted = lockgranted;
        this.lockedby = lockedby;
    }

    /**
     * Getter for <code>public.databasechangeloglock.id</code>.
     */
    @NotNull
    @Override
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.databasechangeloglock.id</code>.
     */
    @Override
    public void setId(Integer id) {
        this.id = id;
        this.touch();
    }

    /**
     * Getter for <code>public.databasechangeloglock.locked</code>.
     */
    @NotNull
    @Override
    public Boolean getLocked() {
        return this.locked;
    }

    /**
     * Setter for <code>public.databasechangeloglock.locked</code>.
     */
    @Override
    public void setLocked(Boolean locked) {
        this.locked = locked;
        this.touch();
    }

    /**
     * Getter for <code>public.databasechangeloglock.lockgranted</code>.
     */
    @Override
    public LocalDateTime getLockgranted() {
        return this.lockgranted;
    }

    /**
     * Setter for <code>public.databasechangeloglock.lockgranted</code>.
     */
    @Override
    public void setLockgranted(LocalDateTime lockgranted) {
        this.lockgranted = lockgranted;
        this.touch();
    }

    /**
     * Getter for <code>public.databasechangeloglock.lockedby</code>.
     */
    @Size(max = 255)
    @Override
    public String getLockedby() {
        return this.lockedby;
    }

    /**
     * Setter for <code>public.databasechangeloglock.lockedby</code>.
     */
    @Override
    public void setLockedby(String lockedby) {
        this.lockedby = lockedby;
        this.touch();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Databasechangeloglock other = (Databasechangeloglock) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.locked == null) {
            if (other.locked != null)
                return false;
        }
        else if (!this.locked.equals(other.locked))
            return false;
        if (this.lockgranted == null) {
            if (other.lockgranted != null)
                return false;
        }
        else if (!this.lockgranted.equals(other.lockgranted))
            return false;
        if (this.lockedby == null) {
            if (other.lockedby != null)
                return false;
        }
        else if (!this.lockedby.equals(other.lockedby))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.locked == null) ? 0 : this.locked.hashCode());
        result = prime * result + ((this.lockgranted == null) ? 0 : this.lockgranted.hashCode());
        result = prime * result + ((this.lockedby == null) ? 0 : this.lockedby.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Databasechangeloglock (");

        sb.append(id);
        sb.append(", ").append(locked);
        sb.append(", ").append(lockgranted);
        sb.append(", ").append(lockedby);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDatabasechangeloglock from) {
        setId(from.getId());
        setLocked(from.getLocked());
        setLockgranted(from.getLockgranted());
        setLockedby(from.getLockedby());
    }

    @Override
    public <E extends IDatabasechangeloglock> E into(E into) {
        into.from(this);
        return into;
    }
}
