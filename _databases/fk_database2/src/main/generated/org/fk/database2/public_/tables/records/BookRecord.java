/*
 * This file is generated by jOOQ.
 */
package org.fk.database2.public_.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.LocalDate;

import org.fk.database2.public_.tables.Book;
import org.fk.database2.public_.tables.interfaces.IBook;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements IBook {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.book.book_id</code>.
     */
    @Override
    public void setBook_id(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.book.book_id</code>.
     */
    @Override
    public Integer getBook_id() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.book.title</code>.
     */
    @Override
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.book.title</code>.
     */
    @NotNull
    @Size(max = 200)
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.book.author_id</code>.
     */
    @Override
    public void setAuthor_id(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.book.author_id</code>.
     */
    @NotNull
    @Override
    public Integer getAuthor_id() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.book.genre</code>.
     */
    @Override
    public void setGenre(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.book.genre</code>.
     */
    @Size(max = 50)
    @Override
    public String getGenre() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.book.publication_date</code>.
     */
    @Override
    public void setPublication_date(LocalDate value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.book.publication_date</code>.
     */
    @Override
    public LocalDate getPublication_date() {
        return (LocalDate) get(4);
    }

    /**
     * Setter for <code>public.book.isbn</code>.
     */
    @Override
    public void setIsbn(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.book.isbn</code>.
     */
    @Size(max = 20)
    @Override
    public String getIsbn() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBook from) {
        setBook_id(from.getBook_id());
        setTitle(from.getTitle());
        setAuthor_id(from.getAuthor_id());
        setGenre(from.getGenre());
        setPublication_date(from.getPublication_date());
        setIsbn(from.getIsbn());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IBook> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Integer book_id, String title, Integer author_id, String genre, LocalDate publication_date, String isbn) {
        super(Book.BOOK);

        setBook_id(book_id);
        setTitle(title);
        setAuthor_id(author_id);
        setGenre(genre);
        setPublication_date(publication_date);
        setIsbn(isbn);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(org.fk.database2.public_.tables.dtos.Book value) {
        super(Book.BOOK);

        if (value != null) {
            setBook_id(value.getBook_id());
            setTitle(value.getTitle());
            setAuthor_id(value.getAuthor_id());
            setGenre(value.getGenre());
            setPublication_date(value.getPublication_date());
            setIsbn(value.getIsbn());
            resetChangedOnNotNull();
        }
    }
}
