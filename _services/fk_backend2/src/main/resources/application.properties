# ---------------------------------------
# Environment-Specific (Dynamic) Settings
# ---------------------------------------
# please override with environment-variables (for example: DATABASE1_HOSTNAME, ...)
# or create an application-dev.properties file in this folder for overrides (only in local dev / with quarkus:dev)

# database
database1.hostname=localhost
database1.port=1763
database1.username=root
database1.password=changeme
database2.hostname=localhost
database2.port=1764
database2.username=mydbuser
database2.password=changeme

# cognito
cognito.userpoolid=xxx
cognito.userpoolclientid=xxx
cognito.userpoolclientsecret=xxx
cognito.hostname=localhost
cognito.port=9229

# ---------------------------------------
# Fixed Settings
# ---------------------------------------
# in most cases you do not need to override/change the following common settings

# disable quarkus-dev services (they slow-down the startup massively)
quarkus.devservices.enabled=false

# use init-data-enabled=true only for local environment, and only if you need it.
org.fk.backend2.init-data-enabled=false

# database
# rewriteBatchedStatements=true (needed for performance-boost with batch-statemets, see: https://vladmihalcea.com/mysql-rewritebatchedstatements/)
# allowMultiQueries=true (needed for being able to use MULTISET, see: https://blog.jooq.org/mysqls-allowmultiqueries-flag-with-jdbc-and-jooq/)
# useCursorFetch=true (needed for mariadb respecting fetchSize for streaming, see: https://stackoverflow.com/questions/26046234/is-there-a-mysql-jdbc-that-will-respect-fetchsize)
quarkus.datasource.active=false
quarkus.datasource.database1.db-kind=mariadb
quarkus.datasource.database1.jdbc.url=jdbc:mariadb://${database1.hostname}:${database1.port}/testshop?useCursorFetch=true&rewriteBatchedStatements=true&allowMultiQueries=true
quarkus.datasource.database1.username=${database1.username}
quarkus.datasource.database1.password=${database1.password}
quarkus.datasource.database2.db-kind=postgresql
quarkus.datasource.database2.jdbc.url=jdbc:postgresql://${database2.hostname}:${database2.port}/testlibrary
quarkus.datasource.database2.username=${database2.username}
quarkus.datasource.database2.password=${database2.password}

# liquibase (uses files in _databases/databaseX/...)
# use context=ddl only for local environment!
quarkus.liquibase.migrate-at-start=false
quarkus.liquibase.database1.migrate-at-start=false
quarkus.liquibase.database2.migrate-at-start=true
quarkus.liquibase.database2.change-log=database2/liquibase/changelog.xml
quarkus.liquibase.database2.contexts=dml,ddl

# cognito-local
cognitolocal.userpoolid=${cognito.userpoolid}
cognitolocal.userpoolclientid=${cognito.userpoolclientid}
cognitolocal.userpoolclientsecret=${cognito.userpoolclientsecret}

# quarkus oidc
quarkus.oidc.auth-server-url=http://${cognito.hostname}:${cognito.port}/${cognito.userpoolid}
quarkus.oidc.discovery-enabled=false
quarkus.oidc.jwks-path=http://${cognito.hostname}:${cognito.port}/${cognito.userpoolid}/.well-known/jwks.json

# logging
quarkus.log.category."org.fk".level=DEBUG
quarkus.log.category."org.jooq.tools.LoggerListener".level=DEBUG

# port
quarkus.http.port=8001

# metrics (rest-endpoint: /metrics) -> research 'vendor_agroal_active_count' to see how many jdbc-connections are open
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true