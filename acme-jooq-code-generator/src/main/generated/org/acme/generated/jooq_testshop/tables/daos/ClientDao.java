/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.jooq_testshop.tables.daos;


import jakarta.validation.Valid;

import java.util.List;
import java.util.Optional;

import org.acme.generated.jooq_testshop.tables.Client;
import org.acme.generated.jooq_testshop.tables.records.ClientRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Valid
public class ClientDao extends DAOImpl<ClientRecord, org.acme.generated.jooq_testshop.tables.dtos.Client, Integer> {

    /**
     * Create a new ClientDao without any configuration
     */
    public ClientDao() {
        super(Client.CLIENT, org.acme.generated.jooq_testshop.tables.dtos.Client.class);
    }

    /**
     * Create a new ClientDao with an attached configuration
     */
    public ClientDao(Configuration configuration) {
        super(Client.CLIENT, org.acme.generated.jooq_testshop.tables.dtos.Client.class, configuration);
    }

    @Override
    public Integer getId(org.acme.generated.jooq_testshop.tables.dtos.Client object) {
        return object.getClientId();
    }

    /**
     * Fetch records that have <code>clientId BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<org.acme.generated.jooq_testshop.tables.dtos.Client> fetchRangeOfClientid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Client.CLIENT.CLIENTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>clientId IN (values)</code>
     */
    public List<org.acme.generated.jooq_testshop.tables.dtos.Client> fetchByClientid(Integer... values) {
        return fetch(Client.CLIENT.CLIENTID, values);
    }

    /**
     * Fetch a unique record that has <code>clientId = value</code>
     */
    public org.acme.generated.jooq_testshop.tables.dtos.Client fetchOneByClientid(Integer value) {
        return fetchOne(Client.CLIENT.CLIENTID, value);
    }

    /**
     * Fetch a unique record that has <code>clientId = value</code>
     */
    public Optional<org.acme.generated.jooq_testshop.tables.dtos.Client> fetchOptionalByClientid(Integer value) {
        return fetchOptional(Client.CLIENT.CLIENTID, value);
    }
}
