/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.jooq_testshop.tables.dtos;


import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.acme.generated.AbstractDTO;
import org.acme.generated.jooq_testshop.tables.interfaces.IRole;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Valid
public class Role extends AbstractDTO implements IRole {

    private static final long serialVersionUID = 1L;

    private String roleId;

    public Role() {}

    public Role(IRole value) {
        this.roleId = value.getRoleId();
    }

    public Role(
        String roleId
    ) {
        this.roleId = roleId;
    }

    /**
     * Getter for <code>jooq_testshop.role.roleId</code>.
     */
    @NotNull
    @Size(max = 50)
    @Override
    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>jooq_testshop.role.roleId</code>.
     */
    @Override
    public void setRoleId(String roleId) {
        this.roleId = roleId;
        this.setAt("roleId", roleId);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Role other = (Role) obj;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        }
        else if (!this.roleId.equals(other.roleId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Role (");

        sb.append(roleId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRole from) {
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IRole> E into(E into) {
        into.from(this);
        return into;
    }
}
