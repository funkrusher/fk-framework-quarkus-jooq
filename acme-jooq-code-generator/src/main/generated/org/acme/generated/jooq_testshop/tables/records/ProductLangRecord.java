/*
 * This file is generated by jOOQ.
 */
package org.acme.generated.jooq_testshop.tables.records;


import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.acme.generated.jooq_testshop.tables.ProductLang;
import org.acme.generated.jooq_testshop.tables.interfaces.IProductLang;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Valid
public class ProductLangRecord extends UpdatableRecordImpl<ProductLangRecord> implements Record4<Long, Integer, String, String>, IProductLang {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_testshop.product_lang.productId</code>.
     */
    @Override
    public void setProductId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq_testshop.product_lang.productId</code>.
     */
    @NotNull
    @Override
    public Long getProductId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_testshop.product_lang.langId</code>.
     */
    @Override
    public void setLangId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq_testshop.product_lang.langId</code>.
     */
    @NotNull
    @Override
    public Integer getLangId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jooq_testshop.product_lang.name</code>.
     */
    @Override
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq_testshop.product_lang.name</code>.
     */
    @NotNull
    @Size(max = 255)
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_testshop.product_lang.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq_testshop.product_lang.description</code>.
     */
    @NotNull
    @Size(max = 65535)
    @Override
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ProductLang.PRODUCT_LANG.PRODUCTID;
    }

    @Override
    public Field<Integer> field2() {
        return ProductLang.PRODUCT_LANG.LANGID;
    }

    @Override
    public Field<String> field3() {
        return ProductLang.PRODUCT_LANG.NAME;
    }

    @Override
    public Field<String> field4() {
        return ProductLang.PRODUCT_LANG.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getProductId();
    }

    @Override
    public Integer component2() {
        return getLangId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getProductId();
    }

    @Override
    public Integer value2() {
        return getLangId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public ProductLangRecord value1(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductLangRecord value2(Integer value) {
        setLangId(value);
        return this;
    }

    @Override
    public ProductLangRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductLangRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductLangRecord values(Long value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IProductLang from) {
        setProductId(from.getProductId());
        setLangId(from.getLangId());
        setName(from.getName());
        setDescription(from.getDescription());
    }

    @Override
    public <E extends IProductLang> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductLangRecord
     */
    public ProductLangRecord() {
        super(ProductLang.PRODUCT_LANG);
    }

    /**
     * Create a detached, initialised ProductLangRecord
     */
    public ProductLangRecord(Long productId, Integer langId, String name, String description) {
        super(ProductLang.PRODUCT_LANG);

        setProductId(productId);
        setLangId(langId);
        setName(name);
        setDescription(description);
    }

    /**
     * Create a detached, initialised ProductLangRecord
     */
    public ProductLangRecord(org.acme.generated.jooq_testshop.tables.dtos.ProductLang value) {
        super(ProductLang.PRODUCT_LANG);

        if (value != null) {
            setProductId(value.getProductId());
            setLangId(value.getLangId());
            setName(value.getName());
            setDescription(value.getDescription());
        }
    }
}
