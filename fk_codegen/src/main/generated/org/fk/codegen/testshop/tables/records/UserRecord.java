/*
 * This file is generated by jOOQ.
 */
package org.fk.codegen.testshop.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.codegen.testshop.tables.User;
import org.fk.codegen.testshop.tables.interfaces.IUser;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Valid
@Entity
@Table(
    name = "user",
    schema = "testshop"
)
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements IUser {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.user.userId</code>.
     */
    @Override
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>testshop.user.userId</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "userId")
    @Override
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>testshop.user.clientId</code>.
     */
    @Override
    public void setClientId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>testshop.user.clientId</code>.
     */
    @Column(name = "clientId", nullable = false)
    @NotNull
    @Override
    public Integer getClientId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>testshop.user.email</code>.
     */
    @Override
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>testshop.user.email</code>.
     */
    @Column(name = "email", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>testshop.user.firstname</code>.
     */
    @Override
    public void setFirstname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>testshop.user.firstname</code>.
     */
    @Column(name = "firstname", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getFirstname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>testshop.user.lastname</code>.
     */
    @Override
    public void setLastname(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>testshop.user.lastname</code>.
     */
    @Column(name = "lastname", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    @Override
    public String getLastname() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUser from) {
        setUserId(from.getUserId());
        setClientId(from.getClientId());
        setEmail(from.getEmail());
        setFirstname(from.getFirstname());
        setLastname(from.getLastname());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IUser> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer userId, Integer clientId, String email, String firstname, String lastname) {
        super(User.USER);

        setUserId(userId);
        setClientId(clientId);
        setEmail(email);
        setFirstname(firstname);
        setLastname(lastname);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(org.fk.codegen.testshop.tables.dtos.User value) {
        super(User.USER);

        if (value != null) {
            setUserId(value.getUserId());
            setClientId(value.getClientId());
            setEmail(value.getEmail());
            setFirstname(value.getFirstname());
            setLastname(value.getLastname());
            resetChangedOnNotNull();
        }
    }
}
