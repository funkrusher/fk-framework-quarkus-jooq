/*
 * This file is generated by jOOQ.
 */
package org.fk.codegen.testshop.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.codegen.testshop.tables.UserRole;
import org.fk.codegen.testshop.tables.interfaces.IUserRole;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Valid
@Entity
@Table(
    name = "user_role",
    schema = "testshop"
)
public class UserRoleRecord extends UpdatableRecordImpl<UserRoleRecord> implements IUserRole {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.user_role.userId</code>.
     */
    @Override
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>testshop.user_role.userId</code>.
     */
    @Column(name = "userId", nullable = false)
    @NotNull
    @Override
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>testshop.user_role.roleId</code>.
     */
    @Override
    public void setRoleId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testshop.user_role.roleId</code>.
     */
    @Column(name = "roleId", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    @Override
    public String getRoleId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUserRole from) {
        setUserId(from.getUserId());
        setRoleId(from.getRoleId());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IUserRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRoleRecord
     */
    public UserRoleRecord() {
        super(UserRole.USER_ROLE);
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(Integer userId, String roleId) {
        super(UserRole.USER_ROLE);

        setUserId(userId);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRoleRecord
     */
    public UserRoleRecord(org.fk.codegen.testshop.tables.dtos.UserRole value) {
        super(UserRole.USER_ROLE);

        if (value != null) {
            setUserId(value.getUserId());
            setRoleId(value.getRoleId());
            resetChangedOnNotNull();
        }
    }
}
