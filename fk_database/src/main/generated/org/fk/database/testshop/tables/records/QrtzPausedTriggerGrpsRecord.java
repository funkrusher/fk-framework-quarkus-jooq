/*
 * This file is generated by jOOQ.
 */
package org.fk.database.testshop.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import org.fk.database.testshop.tables.QrtzPausedTriggerGrps;
import org.fk.database.testshop.tables.interfaces.IQrtzPausedTriggerGrps;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class QrtzPausedTriggerGrpsRecord extends UpdatableRecordImpl<QrtzPausedTriggerGrpsRecord> implements IQrtzPausedTriggerGrps {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME</code>.
     */
    @Override
    public void setSCHED_NAME(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.SCHED_NAME</code>.
     */
    @NotNull
    @Size(max = 120)
    @Override
    public String getSCHED_NAME() {
        return (String) get(0);
    }

    /**
     * Setter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP</code>.
     */
    @Override
    public void setTRIGGER_GROUP(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>testshop.QRTZ_PAUSED_TRIGGER_GRPS.TRIGGER_GROUP</code>.
     */
    @NotNull
    @Size(max = 190)
    @Override
    public String getTRIGGER_GROUP() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IQrtzPausedTriggerGrps from) {
        setSCHED_NAME(from.getSCHED_NAME());
        setTRIGGER_GROUP(from.getTRIGGER_GROUP());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IQrtzPausedTriggerGrps> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QrtzPausedTriggerGrpsRecord
     */
    public QrtzPausedTriggerGrpsRecord() {
        super(QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS);
    }

    /**
     * Create a detached, initialised QrtzPausedTriggerGrpsRecord
     */
    public QrtzPausedTriggerGrpsRecord(String SCHED_NAME, String TRIGGER_GROUP) {
        super(QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS);

        setSCHED_NAME(SCHED_NAME);
        setTRIGGER_GROUP(TRIGGER_GROUP);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised QrtzPausedTriggerGrpsRecord
     */
    public QrtzPausedTriggerGrpsRecord(org.fk.database.testshop.tables.dtos.QrtzPausedTriggerGrps value) {
        super(QrtzPausedTriggerGrps.QRTZ_PAUSED_TRIGGER_GRPS);

        if (value != null) {
            setSCHED_NAME(value.getSCHED_NAME());
            setTRIGGER_GROUP(value.getTRIGGER_GROUP());
            resetChangedOnNotNull();
        }
    }
}
